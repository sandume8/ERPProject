<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">



<!-- 맵퍼네임 -->
<mapper namespace="kr.happyjob.study.business.dao.OeManagementDao">



	<!-- 1.  수주서 테이블 목록 조회 -->
	<select id="oemList" resultType="kr.happyjob.study.business.model.OeManagementModel" parameterType ="hashmap" >

	 SELECT      DISTINCT
	 					 d.estimate_no
					   ,a.receive_num
					   ,a.supply_val
					   ,a.supply_tax
					   ,a.supply_cost
                       ,a.client_cd
					   ,b.limit_date
					   ,c.product_cd
					   ,c.prod_nm
                       ,e.client_nm
                      , b.slip_no

		FROM tb_receive_info a

	  	 	INNER JOIN  receive_prod b ON b.estimate_no = a.estimate_no
	        INNER JOIN  tb_scm_product c ON c.product_cd = b.product_cd
			INNER JOIN  estimate_info d ON d.estimate_no = a.estimate_no
	        INNER JOIN  (tb_erp_client e) ON e.client_cd = a.client_cd
	        INNER JOIN  tb_userinfo tu on tu.loginID = a.loginID
	      	INNER JOIN  tb_acc_slip f ON  f.slip_no = b.slip_no and f.detail_account_cd =203
	 <where>
         <if test="(client_search != null) and (! client_search.equals(''))">
             AND a.client_cd like #{client_search}
         </if>
         <if test="(from_date != null) and (! from_date.equals(''))">
  			 AND a.estimate_date  <![CDATA[>=]]> STR_TO_DATE(#{from_date}, '%Y-%m-%d')   
         </if>
         <if test="(to_date != null) and (!to_date.equals(''))">
         	AND a.estimate_date  <![CDATA[<=]]> STR_TO_DATE(#{to_date}, '%Y-%m-%d')   
         </if>         
         
      </where>
		ORDER BY d.estimate_no 

		LIMIT #{pageIndex}, #{pageSize}
	</select>
	

	

	<!-- 2. 전체 목록 카운트  -->
	<select id="oemCnt" resultType="int"  parameterType="hashmap">
<!-- 		SELECT COUNT(estimate_no) 검색 및 전체 목록 뿌릴때의 카운트, cliCnt
		 FROM estimate_info -->
		 
		 
		SELECT  COUNT(d.estimate_no)
	

		FROM tb_receive_info a
	
	  	 	INNER JOIN  receive_prod b ON b.estimate_no = a.estimate_no
	        INNER JOIN  tb_scm_product c ON c.product_cd = b.product_cd
			INNER JOIN  estimate_info d ON d.estimate_no = a.estimate_no
	        INNER JOIN  (tb_erp_client e) ON e.client_cd = a.client_cd
	        INNER JOIN  tb_userinfo tu on tu.loginID = a.loginID
	        INNER JOIN  tb_acc_slip f ON  f.slip_no = b.slip_no and f.detail_account_cd =203

	<where>
         <if test="(client_search != null) and (! client_search.equals(''))">
             AND a.client_cd  = #{client_search} <!-- 카운트 값 매칭 -->
         </if>
         <if test="(from_date != null) and (! from_date.equals(''))">
			AND a.reg_date  <![CDATA[>=]]> STR_TO_DATE(#{from_date}, '%Y-%m-%d')   
         </if>
         <if test="(to_date != null) and (!to_date.equals(''))">
         	AND a.reg_date  <![CDATA[<=]]> STR_TO_DATE(#{to_date}, '%Y-%m-%d')   
         </if>         
      </where>
		ORDER BY d.estimate_no
</select>
	


	<!-- 3. 단건조회  -->
	<select id ="selectOemList"  resultType ="kr.happyjob.study.business.model.OeManagementModel" >

			SELECT  DISTINCT
			a.estimate_no
					    ,a.client_cd
					    ,a.supply_val
					    ,a.supply_tax
					    ,a.supply_cost
					    ,a.loginID
					    ,b.client_cd
				   	    ,b.limit_date
				   	    ,b.estimate_cnt
		   		 	    ,e.cop_no1
					    ,e.cop_no2
					    ,e.cop_no3
					    ,e.client_nm
					    ,e.emp_nm
					    ,e.emp_hp
					    ,e.addr
					    ,e.addr_detail
					    ,e.client_nm
					    
		
				
		FROM tb_receive_info a
	  	 	INNER JOIN  receive_prod b ON b.estimate_no = a.estimate_no
	        INNER JOIN  tb_scm_product c ON c.product_cd = b.product_cd
			INNER JOIN  estimate_info d ON d.estimate_no = a.estimate_no
	        INNER JOIN  (tb_erp_client e) ON e.client_cd = a.client_cd
	        INNER JOIN  tb_userinfo tu on tu.loginID = a.loginID
	        INNER JOIN  tb_acc_slip f ON  f.slip_no = b.slip_no
	          and f.client_cd  =e.client_cd
	          and f.detail_account_cd =203
		WHERE a.estimate_no = #{estimate_no} 
	</select>	
	
	
	
	
	
	
	<!-- 견적서 테이블 -> 계정금액테이블로 :: 인서트 3번 -->
	<!-- 단가   -->
	<insert id="insertAccSlip1" >
		 <selectKey resultType="int" keyProperty="slip_no" order="BEFORE">
		 
		 SELECT MAX(slip_no) +1
		 FROM tb_acc_slip
		 </selectKey>
		
		
		INSERT INTO tb_acc_slip (	
													slip_no,
													account_cd,
													detail_account_cd,
													occur_date,
													amt,
													note,
													client_cd
												)
		
												
			VALUES(
							#{slip_no}
							,'B200'
							,'201'
							,STR_TO_DATE(NOW(), '%Y-%m-%d')   
							, (    SELECT supply_cnt 
								  FROM  estimate_prod a 
								  	INNER JOIN (SELECT max(estimate_no),supply_cnt  
								  						FROM estimate_prod) b on a.supply_cnt = b.supply_cnt )
					        , #{note}
					       ,( SELECT client_cd
							  FROM  estimate_prod a
							      inner join (SELECT max(estimate_no),supply_cnt
							                  FROM estimate_prod) b on a.supply_cnt = b.supply_cnt)
			                 )
	
	</insert>
	
	<insert id="insertAccSlip2" > <!-- 세금  -->
		INSERT INTO tb_acc_slip (	
													slip_no,
													account_cd,
													detail_account_cd,
													occur_date,
													amt,
													note,
													client_cd
												)
		
												
			VALUES(
							(SELECT MAX(slip_no) FROM tb_acc_slip
							,'B200'
							,'202'
							,STR_TO_DATE(NOW(), '%Y-%m-%d')   
							, (    SELECT a.supply_tax
				             FROM  estimate_prod a
				                INNER JOIN (SELECT max(estimate_no),supply_tax
				                                    FROM estimate_prod) b on a.supply_tax = b.supply_tax)
			 
					        , #{note}
					       ,(SELECT client_cd
							 FROM  estimate_prod a
								    INNER JOIN  (SELECT MAX(estimate_no),supply_cnt
								                 		 FROM estimate_prod) b on a.supply_cnt = b.supply_cnt )
						)
	
	</insert>
	
	<insert id="insertAccSlip3" > <!-- 공급가액  -->
		INSERT INTO tb_acc_slip (	
													slip_no,
													account_cd,
													detail_account_cd,
													occur_date,
													amt,
													note,
													client_cd
												)
		
												
			VALUES(
							(SELECT MAX(slip_no) FROM tb_acc_slip
							,'B200'
							,'203'
							,STR_TO_DATE(NOW(), '%Y-%m-%d')   
							, (    SELECT a.supply_val
				             FROM  estimate_prod a
				                INNER JOIN (SELECT max(estimate_no),supply_val
				                                    FROM estimate_prod) b on a.supply_val = b.supply_val)
			 
					        , #{note}
					       ,(SELECT client_cd
							 FROM  estimate_prod a
								    INNER JOIN  (SELECT MAX(estimate_no),supply_cnt
								                 		 FROM estimate_prod) b on a.supply_cnt = b.supply_cnt )
						)
	
	</insert>
	

	
	
	<!-- !!! 수주서 테이블 +  수주서 제품 테이블 + SCM order 인서트 -->
	<!-- 견적서테이블 -->
	<insert id="insertOemList" >
		 <selectKey resultType="String" keyProperty="receive_num" order="BEFORE">
							
				 SELECT
				    concat(b.client_cd,'-',date_format(now(),'%Y-%m-%d') 
					             ,'-'   
					            ,lpad(cast((cast(right(ifnull(max(a.receive_num),
					            concat(b.client_cd,DATE_FORMAT(NOW(),'%Y-%m-%d'))),3) as unsigned) + 1) as char),3,'0'))
				FROM tb_receive_info a
				    INNER JOIN  tb_erp_client  b on a.client_cd = b.client_cd
				WHERE b.client_cd = #{client_search1} 

	        </selectKey> 

	        	        
			INSERT INTO tb_receive_info (
														
															slip_no
															,receive_num	
															,estimate_no
															,client_cd
								                            ,unit_cost
															,tax
															,price
															,receive_date
															,reg_date
															,loginID
															
														)
			VALUES(
							(SELECT MAX(slip_no) FROM estimate_prod)
							,#{receive_num}
							,#{estimate_no}
							,#{client_search1}
						    , ( SELECT  sp.price    
						    	FROM tb_scm_product sp 
						    	WHERE  sp.product_cd = #{divproducttall}     )
				            , ( SELECT  sp2.price  / 10   
				            	FROM tb_scm_product sp2 
				            	WHERE  sp2.product_cd = #{divproducttall}     )
				            , ( SELECT  sp3.price + (price  / 10)   
				            	FROM tb_scm_product sp3 
				            	WHERE  sp3.product_cd = #{divproducttall}  )		
					       ,#{loginID}
			)
		</insert>


		<!-- 수주서 제품 테이블 인서트 -->
		<insert id ="updateInsertOemList">
					   INSERT INTO receive_prod (
					   													slip_no
																		,client_cd
																		,estimate_no
																		,product_cd
																		,estimate_cnt
																		,supply_cnt
																		,supply_tax
																		,supply_val
																		,limit_date
																	 )
					
						VALUES(			
									    #{slip_no}
										,#{client_search1}
										, (SELECT max(estimate_no)  <!--  String타입이라도 마지막에 들어온 번호가 나옴 -->
											FROM tb_receive_info
											WHERE client_cd = #{client_search1})  
										,#{divproducttall}
										,#{estimate_cnt}
									    , ( SELECT  sp.price    
									    	FROM tb_scm_product sp 
									    	WHERE  sp.product_cd = #{divproducttall}     )
							            , ( SELECT  sp2.price  / 10   
							            	FROM tb_scm_product sp2 
							            	WHERE  sp2.product_cd = #{divproducttall}     )
							            , ( SELECT  sp3.price + (price  / 10)   
							            	FROM tb_scm_product sp3 
							            	WHERE  sp3.product_cd = #{divproducttall}  )		
										,DATE_SUB(#{limit_date}, INTERVAL 6 MONTH)
									)
		
		</insert>
		
		
		
		<!-- scm order table -->
		<insert id ="insertOrderOemList">
							   INSERT INTO tb_order (
																				order_cd
																				,loginID
																				,product_cd
																				,order_date
																				,want_receive_date
																				,order_cnt
																				,amount
																				,tax
																				,warehouse_cd
																				,offline
																				,deposit_yn
																				,STTcd 
																			 )
							
								VALUES(			
														#{order_cd}
														,#{loginID}
														,#{product_cd}
														,DATE_SUB(#{now}, INTERVAL 6 MONTH)
														,date_add(now(), interval +7 day)
														#{estimate_cnt}
														,(#{supply_cost} * #{estimate_cnt})
														,(#{supply_cost}*0.1) * #{estimate_cnt})
														,(
														SELECT  b.warehouse_cd
		      											FROM tb_order a
		 													INNER JOIN tb_scm_product b 
		 													ON  a.#{product_cd} = b.product_cd and a.warehouse_cd = b.warehouse_cd;
														)
														,'y'
														,'n'
														,1
									)
		</insert>
			



	<!-- 5.단건삭제 -->
	<delete id="deleteOemList">
			DELETE FROM tb_receive_info 
			WHERE estimate_no = #{estimate_no}
	</delete>
	

	<!-- 6. 모달 안 리스트 뿌리기  -->
	<select id="oemListDetail" resultType="kr.happyjob.study.business.model.OeManagementModel" parameterType ="hashmap" >
		SELECT    a.estimate_no
					   ,a.client_cd
				   	   ,a.supply_val
					   ,a.supply_tax
					   ,a.supply_cost
					   ,b.client_nm 
		     	   	   ,c.product_cd
		     	   	   ,c.estimate_cnt
					   ,d.prod_nm
		FROM tb_receive_info a <!-- 견적서 테이블 a  -->
        INNER JOIN (tb_erp_client b) ON a.client_cd = b.client_cd     <!--  거래처 테이블 b . 거래처 이름 가져올려고 조인: 검색조건 -->
        INNER JOIN  receive_prod c ON b.client_cd = c.client_cd  <!--  견적서 제품 정보 테이블. 상품 코드 가져올려고 조인 -->
        INNER JOIN tb_scm_product d ON c.product_cd = d.product_cd <!--  scm 제품 정보테이블.  scm 제품이름 가져올려고  조인 -->
	
		WHERE a.estimate_no = #{estimate_no} 

	</select>
	
	<!-- 7.모달 안 리스트 뿌리기 카운트  -->
	<select id="oemDetailCnt" resultType="int"  parameterType="hashmap">

		SELECT  COUNT(a.estimate_no)
					
		FROM tb_receive_info a <!-- 견적서 테이블 a  -->
        INNER JOIN (tb_erp_client b) ON a.client_cd = b.client_cd     <!--  거래처 테이블 b . 거래처 이름 가져올려고 조인: 검색조건 -->
        INNER JOIN  receive_prod c ON b.client_cd = c.client_cd  <!--  견적서 제품 정보 테이블. 상품 코드 가져올려고 조인 -->
        INNER JOIN tb_scm_product d ON c.product_cd = d.product_cd <!--  scm 제품 정보테이블.  scm 제품이름 가져올려고  조인 -->
		
		
		WHERE a.estimate_no = #{estimate_no} 
   </select>
	
	
	
</mapper>